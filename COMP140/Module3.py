
# Model


def create_list_of_tuples_given_order(order):
    list_of_tuples = []
    dummy_list = []
    repetition = 0
    while repetition <= order:
        for idx in range(3):
            


def markov_chain(data, order):
    """
    Create a Markov chain with the given order from the
    given list of data.
    """

    Markovchain = {}
    return tuple_for_key


print(markov_chain([3, 1, 2, 1, 1, 2, 3, 1, 3, 0, 2, 0, 0, 0, 2, 1], 1))


# Predict

def predict(model, last, num):
    """
    Predict the next num values given the model and the last values.
    """
    return []


# Error

def mse(result, expected):
    """
    Calculate the mean squared error between the sequences
    result and expected.
    """
    return 0.0


# Experiment

def run_experiment(train, order, test, future, actual, trials):
    """
    Run an experiment to predict the future of the test
    data given the training data.  Returns the average
    mean squared error over the number of trials.

    train  - training data
    order  - order of the markov model to use
    test   - "order" days of testing data
    future - number of days to predict
    actual - actual results for next "future" days
    trials - number of trials to run
    """
    return 0.0


# Application

def run():
    # Get the supported stock symbols
    symbols = ('FSLR', 'GOOG', 'DJIA')

    bins = {'DJIA': [2, 2, 1, 1, 1, 2, 2, 1, 2, 2, 1, 1, 2, 2, 1, 2, 2, 0, 2, 3, 2, 2, 2, 2, 2, 2, 1, 2, 1, 1, 2, 2, 2, 0, 1, 1, 2, 2, 0, 2, 3, 1, 1, 3, 1, 0, 2, 1, 0, 0, 3, 2, 3, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 0, 2, 3, 2, 1, 2, 2, 2, 2, 1, 2, 1, 0, 2, 2, 2, 0, 2, 1, 1, 1, 2, 2, 1, 0, 1, 2, 2, 2, 3, 0, 1, 1, 1, 1, 1, 2, 0, 2, 3, 0, 2, 2, 2, 2, 1, 1, 1, 2, 3, 2, 3, 3, 1, 2, 2, 1, 0, 1, 2, 1, 2, 1, 3, 1, 3, 1, 1, 1, 0, 1, 1, 1, 0, 2, 0, 2, 0, 3, 0, 3, 3, 3, 1, 2, 0, 0, 2, 3, 3, 0, 3, 3, 2, 2, 0, 0, 1, 3, 0, 0, 2, 2, 3, 3, 2, 1, 2, 0, 0, 2, 3, 3, 0, 3, 0, 0, 3, 3, 3, 1, 3, 1, 2, 1, 3, 0, 3, 1, 2, 3, 2, 0, 3, 3, 2, 0, 0, 3, 3, 1, 2, 2, 0, 2, 3, 1, 2, 0, 0, 2, 0, 1, 0, 1, 3, 2, 3, 1, 1, 2, 2, 2, 0, 3, 0, 1, 0, 2, 1, 1, 3, 2, 2, 3, 1, 0, 3, 1, 3, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 3, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 1, 0, 2, 2, 2, 2, 3, 2, 2, 1, 2, 1, 1, 1, 2, 3, 1, 1, 2, 2, 2, 1, 1, 1, 1, 0, 2, 3, 0, 2, 3, 1, 1, 2, 1, 2, 2, 2, 2, 1, 2, 1, 1, 0, 1, 1, 1, 2, 1, 1, 1, 1, 0, 1, 3, 1, 1, 2, 1, 3, 0, 1, 0, 1, 2, 3, 2, 2, 0, 3, 1, 3, 2, 1, 2, 1, 0, 2, 0, 2, 2, 1, 3, 1, 2, 1, 1, 1, 1, 1, 1, 3, 1, 2, 2, 2, 1, 1, 1, 2, 3, 3, 1, 1, 1, 1, 3, 2, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 3, 2, 1, 2, 2, 3, 2, 1, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 1, 2, 2, 2, 1, 1, 1, 1, 2, 2, 2, 2, 1, 0, 2, 0, 1, 2, 2, 1, 3, 0, 2, 3, 0, 1, 2, 1, 1, 0, 1, 2, 3, 1, 2, 3, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 0, 3], 'FSLR': [0, 2, 3, 1, 3, 2, 3, 3, 1, 3, 0, 3, 2, 3, 0, 2, 1, 0, 3, 2, 3, 0, 0, 2, 1, 0, 3, 3, 2, 1, 3, 3, 0, 0, 1, 3, 0, 0, 1, 0, 2, 2, 0, 2, 1, 0, 1, 3, 3, 0, 1, 0, 2, 1, 2, 2, 2, 3, 3, 1, 3, 1, 0, 0, 0, 0, 1, 0, 1, 2, 0, 0, 1, 0, 3, 1, 0, 3, 3, 1, 2, 0, 0, 0, 3, 3, 2, 0, 0, 3, 0, 1, 3, 3, 1, 0, 0, 1, 0, 0, 3, 3, 0, 2, 0, 0, 3, 0, 1, 3, 1, 3, 0, 3, 3, 3, 1, 0, 1, 0, 2, 3, 3, 3, 2, 1, 1, 3, 1, 0, 0, 2, 0, 3, 0, 3, 1, 3, 1, 0, 1, 0, 2, 2, 1, 0, 2, 0, 0, 0, 1, 2, 3, 3, 3, 0, 0, 0, 0, 0, 3, 3, 2, 3, 3, 1, 0, 0, 0, 0, 3, 0, 0, 3, 3, 2, 0, 0, 0, 0, 0, 0, 3, 3, 2, 0, 2, 0, 0, 1, 3, 3, 0, 2, 0, 3, 1, 0, 0, 3, 0, 3, 3, 3, 0, 3, 3, 3, 0, 0, 2, 3, 3, 0, 1, 0, 2, 3, 0, 2, 0, 3, 1, 0, 0, 3, 0, 3, 0, 3, 1, 2, 1, 0, 3, 0, 3, 0, 0, 0, 0, 3, 0, 3, 0, 3, 3, 0,
}

    testbins = {'FSLR': [3, 0, 0, 0, 3, 2, 2, 0, 3, 0, 1, 0, 3, 0, 0, 1, 0], 'GOOG': [
        2, 3, 1, 1, 2, 2, 1, 0, 2, 0, 1, 1, 1, 3, 3, 1, 1], 'DJIA': [1, 2, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 1]}

    # Run experiments
    orders = [1, 3, 5, 7, 9]
    ntrials = 500
    days = 5

    for symbol in symbols:
        print(symbol)
        print("====")
        print("Actual:", testbins[symbol][-days:])
        for order in orders:
            error = run_experiment(bins[symbol], order,
                                   testbins[symbol][-order - days:-days], days,
                                   testbins[symbol][-days:], ntrials)
            print("Order", order, ":", error)
        print
